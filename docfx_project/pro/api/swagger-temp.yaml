openapi: 3.0.1
info:
  title: Sorted Shipments API
  description: "# Introduction\r\n\r\nCurrent document version: 1.0.0.\r\n                                               \r\nPRO's Shipments functionality was introduced as an extension to the previous Consignments API suite. PRO's Shipments API collection offers unparalleled flexibility, with support for on-demand collections from multiple locations (e.g. a ship-from-store model) as well the regular scheduled fulfilment centre collections supported by Consignments.\r\n                                                \r\nShipments also offers the ability to group shipments together for ease of management, an improved dangerous goods specification and enhanced customs functionality, among many other features.\r\n                                                \r\nAll API calls require a valid `x-api-key` header to be provided; without this header you will receive a `401 Unauthorised` response.\r\n                                                \r\nThis API is documented in [OpenAPI format v3.0](https://swagger.io/specification/). If you spot any errors in this documentation, please drop us an email at [support@sorted.com](mailto:support@sorted.com).\r\n                                                \r\n# Errors\r\n                                                \r\nThe Shipments API uses standard HTTP response codes to indicate the success or failure of each API call. The body of an unsuccessful response will be in JSON in the following format:\r\n                                                \r\n```json\r\n{\r\n  \"correlation_id\": \"6c4e6a77-feab-42ab-9d7b-f559dc1b90ca\",\r\n  \"code\": \"validation_error\",\r\n  \"message\": \"A provided property has an invalid format\",\r\n  \"details\": [\r\n    {\r\n     \"property\": \"addresses[0].contact.contact_details.email\",\r\n     \"code\": \"invalid_format\",\r\n     \"message\": \"'test@something' is not a valid email address\"\r\n    }\r\n  ],\r\n  \"_links\": [\r\n    {\r\n      \"href\": \"https://api.sorted.com/pro/api/shipments/errors/400_invalid_format.html\",\r\n      \"rel\": \"documentation\",\r\n      \"reference\": \"invalid_format\" \r\n    }\r\n  ]\r\n}\r\n```\r\n                                                \r\n# Authentication\r\n                                                \r\nThis API requires an API key of `x-api-key` with every request.\r\n                                                \r\nYou will receive an initial API key your account is created. Requests _without_ an `x-api-key` header will be rejected with a `401 Access Denied` response.\r\n                                                \r\n<SecurityDefinitions />\r\n                                                \r\n# API Version\r\n                                                \r\nThe current version of all APIs is `1.1`. **All** requests require a header of `x-api-version` with a value of `1.1`. Any request without this value will be rejected.\r\n                                                \r\n| Required Header | Value |\r\n|-----------------|:-----:|\r\n| `x-api-version` | `1.1` |\r\n                                                \r\n# Content Types\r\n                                                \r\nThe Sorted Shipments API supports `application/json` only.\r\n                                                \r\nAll requests should include the following headers:\r\n                                                \r\n| Required Header | Value |\r\n|-----------------|:-----:|\r\n| `Accept`        | `application/json` |\r\n| `Content-Type`  | `application/json` |\r\n                                                \r\n# Compression\r\n                                                \r\nThe Sorted Shipments API supports `gzip` compression which can be enabled with the following header:\r\n                                                \r\n| Header | Value |\r\n|--------|:-----:|\r\n| `Content-Encoding` | `gzip` |"
  contact:
    name: Sorted Support
    email: support@sorted.com
  version: '1.1'
servers:
  - url: https://api.sorted.com/pro/
    description: Production (Live)
  - url: https://api.sorted.com/prosandbox/
    description: Sandbox
paths:
  '/shipment_groups/custom_reference/{customReference}/latest/shipments/{shipmentReference}':
    put:
      tags:
        - Shipment Groups
      summary: Add Shipment to Group
      description: This endpoint provides the simplest possible method of adding a single `shipment` to an existing `shipment_group`.
      parameters:
        - name: customReference
          in: path
          description: The custom reference of the `shipment_group` to add the `shipment` to
          required: true
          schema:
            type: string
            description: The custom reference of the `shipment_group` to add the `shipment` to
        - name: shipmentReference
          in: path
          description: The reference of the `shipment` to add to the `shipment_group`
          required: true
          schema:
            type: string
            description: The reference of the `shipment` to add to the `shipment_group`
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      responses:
        '200':
          description: The `shipment_group` has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ShipmentGroupResponse'
        '304':
          description: The `shipment` already exists in the `shipment_group`
        '400':
          description: There is a validation error in your request
        '403':
          description: You do not have permission to update a `shipment_group`
        '404':
          description: The `shipment_group` could not be found
        '409':
          description: The `shipment_group` is locked or closed and cannot be updated
    delete:
      tags:
        - Shipment Groups
      summary: Remove a Shipment from a Shipment Group
      description: This endpoint allows you to remove a `shipment` from a `shipment_group` using your own `custom_reference` for the group.
      parameters:
        - name: customReference
          in: path
          description: The custom reference of `shipment_group`
          required: true
          schema:
            type: string
            description: The custom reference of `shipment_group`
        - name: shipmentReference
          in: path
          description: The reference of the `shipment` to remove from the `shipment_group`
          required: true
          schema:
            type: string
            description: The reference of the `shipment` to remove from the `shipment_group`
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      responses:
        '200':
          description: The `shipment_group` has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ShipmentGroupResponse'
        '304':
          description: The `shipment` is not a member of the `shipment_group`
        '400':
          description: There is a validation error in your request
        '403':
          description: You do not have permission to update a `shipment_group`
        '404':
          description: The `shipment_group` could not be found
        '409':
          description: The `shipment_group` is locked or closed and cannot be updated
  '/shipment_groups/custom_reference/{customReference}/{version}/shipments/{shipmentReference}':
    put:
      tags:
        - Shipment Groups
      summary: Add Shipment to Group
      description: This endpoint allows you to add a `shipment` to a `shipment_group` using your own custom reference for the group.
      parameters:
        - name: customReference
          in: path
          description: The custom reference of the `shipment_group` to add the `shipment` to
          required: true
          schema:
            type: string
            description: The custom reference of the `shipment_group` to add the `shipment` to
        - name: version
          in: path
          description: The `version` of the `shipment_group` to add the `shipment` to
          required: true
          schema:
            type: integer
            description: The `version` of the `shipment_group` to add the `shipment` to
            format: int32
        - name: shipmentReference
          in: path
          description: The `reference` of the `shipment` to add to the `shipment_group`
          required: true
          schema:
            type: string
            description: The `reference` of the `shipment` to add to the `shipment_group`
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      responses:
        '200':
          description: The `shipment_group` has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ShipmentGroupResponse'
        '304':
          description: The `shipment` already exists in the `shipment_group`
        '400':
          description: There is a validation error in your request
        '403':
          description: You do not have permission to update a `shipment_group`
        '404':
          description: The `shipment_group` could not be found
        '409':
          description: The `shipment_group` is locked or closed and cannot be updated
    delete:
      tags:
        - Shipment Groups
      summary: Remove a Shipment from a Shipment Group
      description: This endpoint allows you to remove a `shipment` from a `shipment_group` using your own `custom_reference` for the group.
      parameters:
        - name: customReference
          in: path
          description: The custom reference of `shipment_group`
          required: true
          schema:
            type: string
            description: The custom reference of `shipment_group`
        - name: version
          in: path
          description: The version of the `shipment_group`
          required: true
          schema:
            type: integer
            description: The version of the `shipment_group`
            format: int32
        - name: shipmentReference
          in: path
          description: The `reference` of the `shipment` to remove from the `shipment_group`
          required: true
          schema:
            type: string
            description: The `reference` of the `shipment` to remove from the `shipment_group`
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      responses:
        '200':
          description: The `shipment_group` has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ShipmentGroupResponse'
        '304':
          description: The `shipment` is not a member of the `shipment_group`
        '400':
          description: There is a validation error in your request
        '403':
          description: You do not have permission to update a `shipment_group`
        '404':
          description: The `shipment_group` could not be found
        '409':
          description: The `shipment_group` is locked or is closed and cannot be updated
  '/shipment_groups/{shipmentGroupReference}/shipments/{shipmentReference}':
    put:
      tags:
        - Shipment Groups
      summary: Add a Shipment to a Shipment Group
      description: This endpoint allows you to add a `shipment` to an exist `shipment_group`.
      parameters:
        - name: shipmentGroupReference
          in: path
          description: The reference of the `shipment_group` to add the `shipment` to
          required: true
          schema:
            type: string
            description: The reference of the `shipment_group` to add the `shipment` to
        - name: shipmentReference
          in: path
          description: The `reference` of the `shipment` to add to the `shipment_group`
          required: true
          schema:
            type: string
            description: The `reference` of the `shipment` to add to the `shipment_group`
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      responses:
        '200':
          description: The `shipment_group` has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ShipmentGroupResponse'
        '304':
          description: The `shipment` already exists in the `shipment_group`
        '400':
          description: There is a validation error in your request
        '403':
          description: You do not have permission to update a `shipment_group`
        '404':
          description: The `shipment_group` could not be found
        '409':
          description: The `shipment_group` is locked or closed and cannot be updated
    delete:
      tags:
        - Shipment Groups
      summary: Remove a Shipment from a Shipment Group
      description: This endpoint allows you to remove a `shipment` from a `shipment_group`.
      parameters:
        - name: shipmentGroupReference
          in: path
          description: The `reference` of the `shipment_group`
          required: true
          schema:
            type: string
            description: The `reference` of the `shipment_group`
        - name: shipmentReference
          in: path
          description: The `reference` of the `shipment` to remove from the `shipment_group`
          required: true
          schema:
            type: string
            description: The `reference` of the `shipment` to remove from the `shipment_group`
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      responses:
        '200':
          description: The `shipment_group` has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ShipmentGroupResponse'
        '304':
          description: The `shipment` is not a member of the `shipment_group`
        '400':
          description: There is a validation error in your request
        '403':
          description: You do not have permission to update a `shipment_group`
        '404':
          description: The `shipment_group` could not be found
        '409':
          description: The `shipment_group` is locked or closed and cannot be updated
  '/shipments/{shipmentReference}/allocate':
    put:
      tags:
        - Allocation
      summary: Allocate Shipment with Default Rules
      description: "This endpoint is used when you wish to allocate a single `shipment` using Sorted's allocation engine. If you require allocation of multiple `shipments`\r\nin a single operation, you should use the Allocate Shipments endpoint.\r\n            \r\nWhen allocating using this endpoint, Sorted will automatically determine the most appropriate carrier service based on several factors, including:\r\n            \r\n- Configured shipping rules\r\n- Configured shipping modes\r\n- Required shipping dates (if specified)\r\n- Required delivery dates (if specified)\r\n- Carrier availability\r\n- Carrier service price"
      parameters:
        - name: shipmentReference
          in: path
          description: The reference of the `shipment` to allocate
          required: true
          schema:
            type: string
            description: The reference of the `shipment` to allocate
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      responses:
        '200':
          description: The `shipment` has been allocated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.AllocateResult'
              example: {
  "shipment_reference": "sp_00870883104518612366935529095172",
  "state": "allocated",
  "price": {
    "net": 10.0,
    "gross": 12.0,
    "taxes": [
      {
        "rate": {
          "reference": "gb_standard",
          "country_iso_code": "GB",
          "type": "standard",
          "value": 0.2
        },
        "amount": 0.0
      }
    ],
    "currency": "GBP"
  },
  "message": "Shipment sp_00870883104518612366935529095172 has been allocated successfully",
  "carrier": {
    "reference": "DNQ",
    "name": "DNQ Worldwide",
    "service_reference": "DNQ72",
    "service_name": "DNQ 72-Hour Express"
  },
  "tracking_details": {
    "shipment": {
      "reference": "sp_00870883104518612366935529095172",
      "tracking_references": [
        "te_00870883104518612366935529095173"
      ],
      "_links": []
    },
    "contents": [
      {
        "reference": "sc_00870883104518612366935529095174",
        "tracking_references": [
          "te_00870883104518612366935529095175"
        ],
        "_links": []
      }
    ]
  },
  "_links": [
    {
      "href": "https://api.sorted.com/pro/labels/sp_00870883104518612366935529095172/pdf",
      "rel": "label",
      "reference": "sp_00870883104518612366935529095172",
      "type": "label"
    },
    {
      "href": "https://api.sorted.com/pro/labels/sp_00870883104518612366935529095172/zpl",
      "rel": "label",
      "reference": "sp_00870883104518612366935529095172",
      "type": "label"
    },
    {
      "href": "https://api.sorted.com/pro/shipments/sp_00870883104518612366935529095172",
      "rel": "shipment",
      "reference": "sp_00870883104518612366935529095172",
      "type": "shipment"
    }
  ]
}
        '202':
          description: The `shipment` has been queued for allocation
        '400':
          description: There is a validation error in your request
        '404':
          description: No `shipment` could be found with the provided reference
        '521':
          description: Allocation has failed - the `shipment` could not be allocated
  /shipments/allocate:
    put:
      tags:
        - Allocation
      summary: Allocate Shipments with Default Rules
      description: "This endpoint is used when you wish to allocate one or more `shipments` using Sorted's allocation engine. If you only require\r\nallocation of a single `shipment`, you should prefer the single Allocate Shipment endpoint.\r\n            \r\nWhen allocating using this endpoint, Sorted will automatically determine the most appropriate carrier service based on\r\nseveral factors, including:\r\n            \r\n- Configured shipping rules\r\n- Configured shipping modes\r\n- Required shipping dates (if specified)\r\n- Required delivery dates (if specified)\r\n- Carrier availability\r\n- Carrier service price"
      parameters:
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      requestBody:
        description: An `allocate_request` which identifies which `shipments` should be allocated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sorted.Shipments.DataContracts.AllocateRequest'
      responses:
        '202':
          description: The `shipments` have been queued for allocation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sorted.Shipments.DataContracts.AllocateResult'
        '200':
          description: The `shipments` have been allocated successfully
        '400':
          description: There is a validation error in your request
        '404':
          description: No `shipment(s)` could be found with the provided reference(s)
        '407':
          description: "One or more `shipments` have been allocated successfully, but one or more `shipments` could not be\r\nallocated. The response will include details of the status for relevant `shipments`."
        '521':
          description: Allocation has failed - the `shipment(s)` could not be allocated
  /shipments/allocate/filters:
    put:
      tags:
        - Allocation
      summary: Allocate Shipments with Filters
      description: "This endpoint is used when you wish to allocate on or more `shipments` by selecting a carrier service\r\nthat matches the provided filters."
      parameters:
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      requestBody:
        description: An `allocate_with_filters_request` which allows you to specify filters to identify `shipments` to automatically allocate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sorted.Shipments.DataContracts.AllocateWithFiltersRequest'
      responses:
        '202':
          description: One or more `shipments` have been identified and queued for allocation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.AllocateWithFiltersResult'
        '200':
          description: One or more `shipments` have been identified and allocated successfully
        '400':
          description: There is a validation error in your request
        '521':
          description: Allocation has failed - the `shipment(s)` could not be allocated
  /shipments/allocate/service:
    put:
      tags:
        - Allocation
      summary: Allocate Shipments with Carrier Service
      description: "This endpoint is used when you wish to allocate one or more `shipments` with a specific carrier service.\r\n            \r\n> Note: If you wish to allocate a single `shipment`, you should prefer the Allocate Shipment with\r\nCarrier Service endpoint."
      parameters:
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      requestBody:
        description: "An `allocate_with_carrier_service_request` which identifies which `shipments` should be allocated\r\nand the reference of the carrier service to be used"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sorted.Shipments.DataContracts.AllocateWithCarrierServiceRequest'
      responses:
        '202':
          description: The `shipments` have been queued for allocation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sorted.Shipments.DataContracts.AllocateResult'
        '207':
          description: "One or more `shipments` have been allocated successfully, but one or more `shipments` could not be\r\nallocated. The response will include details of the status for relevant `shipments`."
        '400':
          description: There is a validation error in your request
        '404':
          description: "Either no `shipment(s)` could be found with the provided reference(s) or there is no carrier service\r\nwith the provided reference."
        '521':
          description: Allocation has failed - the `shipment(s)` could not be allocated
  /shipments/allocate/service_group:
    put:
      tags:
        - Allocation
      summary: Allocate Shipments with Service Group
      description: "This endpoint is used to allocate multiple `shipments` with a carrier service from a specific\r\n`service_group`.\r\n            \r\n> Note: When requesting allocation of multiple `shipments`, the allocation will not happen in-process.\r\nThis is to ensure the performance of the API endpoint. Any `shipments` allocated as a batch will be\r\nallocated via a background process."
      parameters:
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      requestBody:
        description: "An `allocate_with_service_group_request` which identifies the `shipments` to allocate and the\r\n`service_group` to allocate with."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sorted.Shipments.DataContracts.AllocateWithServiceGroupRequest'
      responses:
        '202':
          description: The `shipments` have been queued for allocation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sorted.Shipments.DataContracts.AllocateResult'
        '200':
          description: The `shipments` have been allocated successfully
        '400':
          description: There is a validation error in your request
        '404':
          description: "No `shipments` could be found with the provided reference or a `service_group` could not be found\r\nwith the provided reference"
        '407':
          description: "One or more `shipments` have been allocated successfully, but one or more `shipments` could not be\r\nallocated. The response will include details of the status for relevant `shipments`."
        '521':
          description: Allocation has failed - the `shipments` could not be allocated
  '/shipments/{shipmentReference}/allocate/quote/{quoteReference}':
    put:
      tags:
        - Allocation
      summary: Allocate Shipment with Quote
      description: This endpoint is used when you wish to allocate a `shipment` with a specific pre-existing `quote`.
      parameters:
        - name: shipmentReference
          in: path
          description: The reference of the `shipment` to be allocated
          required: true
          schema:
            type: string
            description: The reference of the `shipment` to be allocated
        - name: quoteReference
          in: path
          description: The reference of the previously-generated `quote`
          required: true
          schema:
            type: string
            description: The reference of the previously-generated `quote`
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      responses:
        '200':
          description: The `shipment` has been allocated with the `quote` successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.AllocateResult'
              example: {
  "shipment_reference": "sp_00870883105182695153589072953348",
  "state": "allocated",
  "price": {
    "net": 10.0,
    "gross": 12.0,
    "taxes": [
      {
        "rate": {
          "reference": "gb_standard",
          "country_iso_code": "GB",
          "type": "standard",
          "value": 0.2
        },
        "amount": 0.0
      }
    ],
    "currency": "GBP"
  },
  "message": "Shipment sp_00870883105182695153589072953348 has been allocated successfully",
  "carrier": {
    "reference": "DNQ",
    "name": "DNQ Worldwide",
    "service_reference": "DNQ72",
    "service_name": "DNQ 72-Hour Express"
  },
  "tracking_details": {
    "shipment": {
      "reference": "sp_00870883105182695153589072953348",
      "tracking_references": [
        "te_00870883105182695153589072953349"
      ],
      "_links": []
    },
    "contents": [
      {
        "reference": "sc_00870883105182695153589072953350",
        "tracking_references": [
          "te_00870883105182695153589072953351"
        ],
        "_links": []
      }
    ]
  },
  "_links": [
    {
      "href": "https://api.sorted.com/pro/labels/sp_00870883105182695153589072953348/pdf",
      "rel": "label",
      "reference": "sp_00870883105182695153589072953348",
      "type": "label"
    },
    {
      "href": "https://api.sorted.com/pro/labels/sp_00870883105182695153589072953348/zpl",
      "rel": "label",
      "reference": "sp_00870883105182695153589072953348",
      "type": "label"
    },
    {
      "href": "https://api.sorted.com/pro/shipments/sp_00870883105182695153589072953348",
      "rel": "shipment",
      "reference": "sp_00870883105182695153589072953348",
      "type": "shipment"
    }
  ]
}
        '202':
          description: The `shipment` has been queued for allocation with the `quote`
        '400':
          description: There is a validation error in your request
        '404':
          description: The `shipment` could not be found or the `quote` reference could not be found
        '521':
          description: Allocation has failed - the `shipment` could not be allocated
  '/shipments/{shipmentReference}/allocate/service/{serviceReference}':
    put:
      tags:
        - Allocation
      summary: Allocate Shipment with Carrier Service
      description: This endpoint is used when you wish to allocate a `shipment` with a specific carrier service.
      parameters:
        - name: shipmentReference
          in: path
          description: The reference of the `shipment` to allocate
          required: true
          schema:
            type: string
            description: The reference of the `shipment` to allocate
        - name: serviceReference
          in: path
          description: The reference of the carrier service to allocate with
          required: true
          schema:
            type: string
            description: The reference of the carrier service to allocate with
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      responses:
        '200':
          description: The `shipment` has been allocated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.AllocateResult'
              example: {
  "shipment_reference": "sp_00870883105274928873957620711428",
  "state": "allocated",
  "price": {
    "net": 10.0,
    "gross": 12.0,
    "taxes": [
      {
        "rate": {
          "reference": "gb_standard",
          "country_iso_code": "GB",
          "type": "standard",
          "value": 0.2
        },
        "amount": 0.0
      }
    ],
    "currency": "GBP"
  },
  "message": "Shipment sp_00870883105274928873957620711428 has been allocated successfully",
  "carrier": {
    "reference": "DNQ",
    "name": "DNQ Worldwide",
    "service_reference": "DNQ72",
    "service_name": "DNQ 72-Hour Express"
  },
  "tracking_details": {
    "shipment": {
      "reference": "sp_00870883105274928873957620711428",
      "tracking_references": [
        "te_00870883105274928873957620711429"
      ],
      "_links": []
    },
    "contents": [
      {
        "reference": "sc_00870883105274928873957620711430",
        "tracking_references": [
          "te_00870883105274928873957620711431"
        ],
        "_links": []
      }
    ]
  },
  "_links": [
    {
      "href": "https://api.sorted.com/pro/labels/sp_00870883105274928873957620711428/pdf",
      "rel": "label",
      "reference": "sp_00870883105274928873957620711428",
      "type": "label"
    },
    {
      "href": "https://api.sorted.com/pro/labels/sp_00870883105274928873957620711428/zpl",
      "rel": "label",
      "reference": "sp_00870883105274928873957620711428",
      "type": "label"
    },
    {
      "href": "https://api.sorted.com/pro/shipments/sp_00870883105274928873957620711428",
      "rel": "shipment",
      "reference": "sp_00870883105274928873957620711428",
      "type": "shipment"
    }
  ]
}
        '202':
          description: The `shipment` has been queued for allocation
        '400':
          description: There is a validation error in your request
        '404':
          description: No `shipment` could be found with the provided reference or the carrier service reference provided does not exist
        '521':
          description: Allocation has failed - the `shipment` could not be allocated
  '/shipments/{shipmentReference}/allocate/service_group/{groupReference}':
    put:
      tags:
        - Allocation
      summary: Allocate Shipment with Service Group
      description: This endpoint is used to allocate a `shipment` with a carrier service from a specific service group.
      parameters:
        - name: shipmentReference
          in: path
          description: The reference of the `shipment` to allocate
          required: true
          schema:
            type: string
            description: The reference of the `shipment` to allocate
        - name: groupReference
          in: path
          description: The reference of the carrier service group to allocate with
          required: true
          schema:
            type: string
            description: The reference of the carrier service group to allocate with
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      responses:
        '200':
          description: The `shipment` has been allocated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.AllocateResult'
              example: {
  "shipment_reference": "sp_00870883105367162594326168469504",
  "state": "allocated",
  "price": {
    "net": 10.0,
    "gross": 12.0,
    "taxes": [
      {
        "rate": {
          "reference": "gb_standard",
          "country_iso_code": "GB",
          "type": "standard",
          "value": 0.2
        },
        "amount": 0.0
      }
    ],
    "currency": "GBP"
  },
  "message": "Shipment sp_00870883105367162594326168469504 has been allocated successfully",
  "carrier": {
    "reference": "DNQ",
    "name": "DNQ Worldwide",
    "service_reference": "DNQ72",
    "service_name": "DNQ 72-Hour Express"
  },
  "tracking_details": {
    "shipment": {
      "reference": "sp_00870883105367162594326168469504",
      "tracking_references": [
        "te_00870883105367162594326168469505"
      ],
      "_links": []
    },
    "contents": [
      {
        "reference": "sc_00870883105367162594326168469506",
        "tracking_references": [
          "te_00870883105367162594326168469507"
        ],
        "_links": []
      }
    ]
  },
  "_links": [
    {
      "href": "https://api.sorted.com/pro/labels/sp_00870883105367162594326168469504/pdf",
      "rel": "label",
      "reference": "sp_00870883105367162594326168469504",
      "type": "label"
    },
    {
      "href": "https://api.sorted.com/pro/labels/sp_00870883105367162594326168469504/zpl",
      "rel": "label",
      "reference": "sp_00870883105367162594326168469504",
      "type": "label"
    },
    {
      "href": "https://api.sorted.com/pro/shipments/sp_00870883105367162594326168469504",
      "rel": "shipment",
      "reference": "sp_00870883105367162594326168469504",
      "type": "shipment"
    }
  ]
}
        '202':
          description: The `shipment` has been queued for allocation
        '400':
          description: There is a validation error in your request
        '404':
          description: No `shipment` could be found with the provided reference or the service group reference provided does not exist
        '521':
          description: Allocation has failed - the `shipment` could not be allocated
  '/shipments/{shipmentReference}/allocate/virtual_service/{virtualService}':
    put:
      tags:
        - Allocation
      summary: Allocate Shipment with Virtual Service
      description: "This endpoint is used to allocate a `shipment` with a specific carrier service or service group, depending\r\nupon the reference provided.\r\n\r\n> The term \"virtual service\" is used here to indicate that the provided reference can refer to multiple\r\ntypes of entity such as a carrier service or a carrier service group. This functionality may be\r\nextended in the future to include other types of virtual service."
      parameters:
        - name: shipmentReference
          in: path
          description: The reference of the `shipment` to allocate
          required: true
          schema:
            type: string
            description: The reference of the `shipment` to allocate
        - name: virtualService
          in: path
          description: The reference of the carrier service or carrier service group to allocate with
          required: true
          schema:
            type: string
            description: The reference of the carrier service or carrier service group to allocate with
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      responses:
        '200':
          description: The `shipment` has been allocated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.AllocateResult'
              example: {
  "shipment_reference": "sp_00870883105459396314694716227587",
  "state": "allocated",
  "price": {
    "net": 10.0,
    "gross": 12.0,
    "taxes": [
      {
        "rate": {
          "reference": "gb_standard",
          "country_iso_code": "GB",
          "type": "standard",
          "value": 0.2
        },
        "amount": 0.0
      }
    ],
    "currency": "GBP"
  },
  "message": "Shipment sp_00870883105459396314694716227587 has been allocated successfully",
  "carrier": {
    "reference": "DNQ",
    "name": "DNQ Worldwide",
    "service_reference": "DNQ72",
    "service_name": "DNQ 72-Hour Express"
  },
  "tracking_details": {
    "shipment": {
      "reference": "sp_00870883105459396314694716227587",
      "tracking_references": [
        "te_00870883105459396314694716227588"
      ],
      "_links": []
    },
    "contents": [
      {
        "reference": "sc_00870883105459396314694716227589",
        "tracking_references": [
          "te_00870883105459396314694716227590"
        ],
        "_links": []
      }
    ]
  },
  "_links": [
    {
      "href": "https://api.sorted.com/pro/labels/sp_00870883105459396314694716227587/pdf",
      "rel": "label",
      "reference": "sp_00870883105459396314694716227587",
      "type": "label"
    },
    {
      "href": "https://api.sorted.com/pro/labels/sp_00870883105459396314694716227587/zpl",
      "rel": "label",
      "reference": "sp_00870883105459396314694716227587",
      "type": "label"
    },
    {
      "href": "https://api.sorted.com/pro/shipments/sp_00870883105459396314694716227587",
      "rel": "shipment",
      "reference": "sp_00870883105459396314694716227587",
      "type": "shipment"
    }
  ]
}
        '400':
          description: There is a validation error in your request
        '403':
          description: You do not have permission to allocate a `shipment`
        '404':
          description: "No `shipment` could be found with the provided reference or a service group or service could not be found\r\nwith the provided reference"
        '521':
          description: Allocation has failed - the `shipment` could not be allocated
  '/shipments/{shipmentReference}/cancel':
    put:
      tags:
        - Shipments
      summary: Cancel Shipment
      description: "This endpoint is used to cancel a `shipment`, including cancelling a booking with a carrier. A `shipment`\r\ncannot be cancelled once it has been `manifested` with a carrier.\r\n            \r\n> Note: The `state` of `cancelled` is a _terminal_ `state`, i.e. a `shipment` can no longer be updated\r\nor changed once it has been cancelled, other than deleting the `shipment`."
      parameters:
        - name: shipmentReference
          in: path
          description: The reference of the `shipment` to cancel
          required: true
          schema:
            type: string
            description: The reference of the `shipment` to cancel
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      responses:
        '200':
          description: The `shipment` has been cancelled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ResourceResult'
        '202':
          description: The request to cancel the `shipment` has been received successfully
        '400':
          description: There is a validation error in your request
        '403':
          description: You do not have permission to cancel a `shipment`
        '404':
          description: The `shipment` could not be found
        '409':
          description: The `shipment` is not in a valid state to be cancelled
  '/shipment_groups/{shipmentGroupReference}/close':
    post:
      tags:
        - Shipment Groups
      summary: Close a Shipment Group
      description: "Closing a `shipment_group` prevents any further changes or operations to the `shipment_group`, other than retrieving its details.\r\n            \r\n> Note: A `shipment_group` must be `locked` before it can be `closed`.\r\n>\r\n> The close operation is not reversible."
      parameters:
        - name: shipmentGroupReference
          in: path
          description: The `reference` of the `shipment_group` to close
          required: true
          schema:
            type: string
            description: The `reference` of the `shipment_group` to close
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      responses:
        '200':
          description: The `shipment_group` has been closed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ResourceResult'
        '400':
          description: There is a validation error in your request
        '403':
          description: You do not have permission to close the `shipment_group`
        '404':
          description: The `shipment_group` could not be found
        '409':
          description: 'There is a conflict that prevents the `shipment_group` from being `closed`, e.g. it has not yet been `locked`'
  /shipments/quote:
    post:
      tags:
        - Quotes
      summary: Create Quote
      description: "This endpoint is used to retrieve a list of carrier services that are capable of carrying a `shipment`,\r\nbased on the properties of the `shipment` such as `dimensions`, `weight`, `addresses` and delivery promise.\r\n`Quotes` will be generated according to the \"default rules\" in the customer's account.\r\n            \r\n> Note: although not used to create an actual `shipment`, this endpoint uses the same request type\r\n(`create_shipment_request`) as the Create Shipment operation in order to allow customers to re-use the\r\nsame object in the flow: create `quote`, identify suitable `quote`, create `shipment`, allocate `shipment`."
      parameters:
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      requestBody:
        description: A `create_shipment_request`
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sorted.Shipments.DataContracts.CreateShipmentRequest'
      responses:
        '201':
          description: The request was successful. The response will include the `quote` details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.QuoteResult'
        '400':
          description: There is a validation error in your request
        '403':
          description: You do not have permission to create `quotes`
        '531':
          description: The request was valid but there are no `quotes` available.
  '/shipments/quote/service_group/{group_ref}':
    post:
      tags:
        - Quotes
      summary: Create Quote by Service Group
      description: "This endpoint is used to retrieve a list of carrier service within a specific service group that are\r\ncapable of carrying a `shipment`, based on the properties of the `shipment` such as `dimensions`, `weight`,\r\n`addresses`, and delivery promise. `Quotes` will be generated according to the \"default rules\" in the\r\ncustomer's account for the services included in the specified `service_group`.\r\n            \r\n> Note: although not used to create an actual `shipment`, this endpoint uses the same request type\r\n(`create_shipment_request`) as the Create Shipment operation in order to allow customers to re-use the\r\nsame object in the flow: create `quote`, identify suitable `quote`, create `shipment`, allocate `shipment`."
      parameters:
        - name: group_ref
          in: path
          description: The reference of the carrier service group to quote with
          required: true
          schema:
            type: string
            description: The reference of the carrier service group to quote with
            nullable: true
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      requestBody:
        description: A `create_shipment_request`.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sorted.Shipments.DataContracts.CreateShipmentRequest'
      responses:
        '201':
          description: The request was successful. The response will include the `quote` details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.QuoteResult'
        '400':
          description: There is a validation error in your request
        '404':
          description: The `service_group` could not be found
        '403':
          description: You do not have permission to create `quotes`
        '531':
          description: The request was valid but could not be fulfilled
  /shipments:
    post:
      tags:
        - Shipments
      summary: Create Shipment
      description: This endpoint is used to create new `shipments` within SortedPRO.
      parameters:
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      requestBody:
        description: A `create_shipment_request`
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sorted.Shipments.DataContracts.CreateShipmentRequest'
      responses:
        '201':
          description: The `shipment` has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ResourceResult'
        '400':
          description: There is a validation error in your request
        '403':
          description: You do not have permission to create a `shipment`
    put:
      tags:
        - Shipments
      summary: Update Shipment
      description: "This endpoint is used to update an existing `shipment` within SortedPRO. The `shipment` must already exist,\r\nand the account used to perform the API request must have permission to update `shipments`."
      parameters:
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      requestBody:
        description: An `update_shipment_request`
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sorted.Shipments.DataContracts.UpdateShipmentRequest'
      responses:
        '200':
          description: The `shipment` has been updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ResourceResult'
        '400':
          description: There is a validation error in your request
        '403':
          description: You do not have permission to update the `shipment`
        '404':
          description: The `shipment` could not be found
  /shipment_groups:
    post:
      tags:
        - Shipment Groups
      summary: Create a new Shipment Group
      description: "A `shipment_group` is a group of one or more `shipments` that can be operated on together. For example, if a driver is due to\r\ncome and collect a group of `shipments` together, you can create a `shipment_group` for the `shipments` and then produce a\r\n`collection_note` and manage the `state` of all the `shipments` within the group together."
      parameters:
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      requestBody:
        description: A `create_shipment_request` containing details of `shipments` to add to the group
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sorted.Shipments.DataContracts.CreateShipmentGroupRequest'
      responses:
        '201':
          description: The `shipment_group` has been created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ShipmentGroupResponse'
        '207':
          description: The `shipment_group` has been created successfully but one or more `shipments` could not be added to the group.
        '400':
          description: There is a validation error in your request
        '403':
          description: You do not have permission to create a `shipment_group`
        '404':
          description: One or more `shipments` could not be found
    put:
      tags:
        - Shipment Groups
      summary: Update a Shipment Group
      description: This endpoint allows you to add or remove `shipments` from a `shipment_group`. You may also update or remove the `custom_reference` applied to the `shipment_group`.
      parameters:
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      requestBody:
        description: An `update_shipment_group_request`
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sorted.Shipments.DataContracts.UpdateShipmentGroupRequest'
      responses:
        '200':
          description: The `shipment_group` has been updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ShipmentGroupResponse'
        '207':
          description: The `shipment_group` has been updated successfully but one or more `shipments` could not be added to the group.
        '400':
          description: There is a validation error in your request
        '403':
          description: You do not have permission to update a `shipment_group`
        '404':
          description: The `shipment_group` could not be found
        '409':
          description: The `shipment_group` is locked or closed and cannot be updated
  '/shipments/{shipmentReference}':
    delete:
      tags:
        - Shipments
      summary: Delete Shipment
      description: "This endpoint should be used when you wish to completely remove a `shipment` and all of its history\r\nfrom Sorted. This is an irreversible operation - once a `shipment` has been deleted it cannot be\r\nrecovered.\r\n            \r\n> Note: it is only possible to delete a `shipment` once it has been `cancelled`. If you attempt to delete\r\na `shipment` that has _not_ been cancelled, you will receive a `400 (Bad Request)` response."
      parameters:
        - name: shipmentReference
          in: path
          description: The reference of the `shipment` to delete
          required: true
          schema:
            type: string
            description: The reference of the `shipment` to delete
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      responses:
        '200':
          description: The `shipment` has been deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ResourceResult'
        '202':
          description: The request to delete the `shipment` has been received and will be processed
        '400':
          description: There is a validation error in your request
        '403':
          description: You do not have permission to delete a `shipment`
        '404':
          description: The `shipment` could not be found
    get:
      tags:
        - Shipments
      summary: Get Shipment
      description: This endpoint is used to retrieve the details of an existing `shipment`.
      parameters:
        - name: shipmentReference
          in: path
          description: The reference of the `shipment` to retrieve
          required: true
          schema:
            type: string
            description: The reference of the `shipment` to retrieve
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      responses:
        '200':
          description: The request was successful. The response will include the details of the `shipment`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Shipment'
        '400':
          description: There is a validation error in your request
        '403':
          description: You do not have permission to retrieve the `shipment`
        '404':
          description: The `shipment` could not be found
  '/labels/{shipmentReference}/{contentType}/{dpi}':
    get:
      tags:
        - Labels
      summary: Get Labels
      parameters:
        - name: shipmentReference
          in: path
          description: The reference of the `shipment` to retrieve the labels for
          required: true
          schema:
            type: string
            description: The reference of the `shipment` to retrieve the labels for
        - name: contentType
          in: path
          description: The format of document to return
          required: true
          schema:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Enums.ContentType'
        - name: dpi
          in: path
          description: The dpi of the document to return. Has a default value of `203`
          required: true
          schema:
            type: integer
            description: The dpi of the document to return. Has a default value of `203`
            format: int32
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      responses:
        '200':
          description: The request was successful. The response will include the label
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Document'
        '400':
          description: There is a validation error in your request
        '403':
          description: You do not have permission to retrieve labels for a `shipment`
        '404':
          description: The `shipment` could not be found
  '/labels/{shipmentReference}/contents/{contentsReference}/{contentType}/{dpi}':
    get:
      tags:
        - Labels
      summary: Get Contents Label
      parameters:
        - name: shipmentReference
          in: path
          description: The reference of the `shipment` to retrieve the label for
          required: true
          schema:
            type: string
            description: The reference of the `shipment` to retrieve the label for
        - name: contentsReference
          in: path
          description: The reference of the `shipment_contents` to retrieve the label for
          required: true
          schema:
            type: string
            description: The reference of the `shipment_contents` to retrieve the label for
        - name: contentType
          in: path
          description: The format of document to return
          required: true
          schema:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Enums.ContentType'
        - name: dpi
          in: path
          description: The dpi of the document to return
          required: true
          schema:
            type: integer
            description: The dpi of the document to return
            format: int32
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      responses:
        '200':
          description: The request was successful. The response will include the label
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Document'
        '400':
          description: There is a validation error in your request
        '403':
          description: You do not have permission to retrieve labels for a `shipment`
        '404':
          description: The `shipment` could not be found
  '/shipments/manifests/{manifestReference}':
    get:
      tags:
        - Manifest
      summary: Get Manifest
      description: This endpoint can be used to retrieve the details of an existing `manifest`.
      parameters:
        - name: manifestReference
          in: path
          description: The reference of the `manifest` to retrieve
          required: true
          schema:
            type: string
            description: The reference of the `manifest` to retrieve
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      responses:
        '200':
          description: The `manifest` has been found. The response contains the details of the `manifest`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Manifest'
        '403':
          description: You do not have permission to access the `manifest`
        '404':
          description: The `manifest` could not be found
  '/shipments/{shipmentReference}/quote':
    post:
      tags:
        - Quotes
      summary: Get Quote
      description: "This endpoint is used to retrieve a list of allocation options for an existing `shipment`. Each `quote`\r\nreturned will include a unique reference that allows the specific `quote` to be used for allocation."
      parameters:
        - name: shipmentReference
          in: path
          description: The reference of the `shipment` to retrieve `quotes` for
          required: true
          schema:
            type: string
            description: The reference of the `shipment` to retrieve `quotes` for
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      responses:
        '201':
          description: The request was successful. The response will include the available `quotes`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.QuoteResult'
        '400':
          description: There is a validation error in your request
        '403':
          description: You do not have permission to retrieve the `shipment` or generate `quotes`
        '404':
          description: The `shipment` could not be found
        '531':
          description: The request was valid but no `quotes` could be found for the `shipment`
  '/shipment_groups/{shipmentGroupReference}':
    get:
      tags:
        - Shipment Groups
      summary: Retrieve the Details of an Existing Shipment Group
      description: Retrieve the details of an existing shipment_group
      parameters:
        - name: shipmentGroupReference
          in: path
          description: The `reference` of the `shipment_group` to retrieve
          required: true
          schema:
            type: string
            description: The `reference` of the `shipment_group` to retrieve
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      responses:
        '200':
          description: The `shipment_group` has been located successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ShipmentGroup'
        '401':
          description: The user is not authorized
        '403':
          description: You do not have permission to retrieve a `shipment_group`
        '404':
          description: The `shipment_group` could not be found
  '/shipment_groups/{shipmentGroupReference}/lock':
    post:
      tags:
        - Shipment Groups
      summary: Lock a Shipment Group
      description: "This operation places a virtual \"lock\" on a `shipment_group` which prevents any further changes to the group until the group is \"unlocked\".\r\n            \r\nIt is still possible to retrieve a `collection_note` for the group, but `shipments` cannot be added or removed from the group."
      parameters:
        - name: shipmentGroupReference
          in: path
          description: The reference of the `shipment_group` to lock
          required: true
          schema:
            type: string
            description: The reference of the `shipment_group` to lock
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      responses:
        '200':
          description: The `shipment_group` has been locked successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ResourceResult'
        '403':
          description: You do not have permission to lock a `shipment_group`
        '404':
          description: The `shipment_group` could not be found
        '409':
          description: The `shipment_group` is already locked or is closed and cannot be locked
  '/shipment_groups/{shipmentGroupReference}/unlock':
    post:
      tags:
        - Shipment Groups
      summary: Unlock a Shipment Group
      description: "This operation removes a virtual \"lock\" from a `shipment_group` which prevents any further changes to the group until the group is \"unlocked\".\r\n            \r\nUnlocking makes it possible to add or remove `shipments` from the group."
      parameters:
        - name: shipmentGroupReference
          in: path
          description: The reference of the `shipment_group` to unlock
          required: true
          schema:
            type: string
            description: The reference of the `shipment_group` to unlock
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      responses:
        '200':
          description: The `shipment_group` has been unlocked successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ResourceResult'
        '403':
          description: You do not have permission to unlock a `shipment_group`
        '404':
          description: The `shipment_group` could not be found
        '409':
          description: The `shipment_group` is already unlocked or is closed and cannot be locked
  '/shipment_groups/{shipmentGroupReference}/manifest':
    post:
      tags:
        - Manifest
      summary: Manifest Shipments by Shipment Group
      description: "This endpoint can be used to manifest all `shipments` within a `shipment_group` as a single operation.\r\n            \r\n> Note: it is still possible to manifest `shipments` within a group via other methods, as this endpoint's\r\nimplementation will only attempt to manifest `shipments` that are not already manifested. This endpoint is\r\nnot idempotent, as multiple calls can have different results."
      parameters:
        - name: shipmentGroupReference
          in: path
          description: The reference of the `shipment_group`
          required: true
          schema:
            type: string
            description: The reference of the `shipment_group`
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      responses:
        '202':
          description: The `shipments` have been queued for manifest successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ManifestResponse'
        '200':
          description: The `shipments` have been manifested successfully.
        '400':
          description: There is a validation error in your request
        '403':
          description: You do not have permission to access the `shipment_group` or to manifest `shipments`
        '404':
          description: The `shipment_group` could not be found
  '/shipments/{shipmentReference}/manifest':
    put:
      tags:
        - Manifest
      summary: Manifest Shipment
      description: "This endpoint is used to manually manifest an individual `shipment`.\r\n            \r\n> Note: depending on the `shipment_type` and carrier service, not all `shipments` require a manifest\r\noperation."
      parameters:
        - name: shipmentReference
          in: path
          description: The reference of the `shipment` to manifest
          required: true
          schema:
            type: string
            description: The reference of the `shipment` to manifest
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      responses:
        '202':
          description: The `shipment` has been queued for manifest successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ManifestResponse'
        '400':
          description: There is a validation error in your request
        '403':
          description: You do not have permission to access the `shipment` or to manifest `shipments`
        '404':
          description: The `shipment` could not be found
  /shipments/manifest:
    put:
      tags:
        - Manifest
      summary: Manifest Shipments
      description: Manifest multiple shipments
      parameters:
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      requestBody:
        description: A `manifest_request` which identifies the `shipments` to be manifested
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ManifestRequest'
      responses:
        '202':
          description: The `shipments` have been queued for manifest successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ManifestResponse'
        '200':
          description: The `shipments` have been manifested successfully.
        '400':
          description: There is a validation error in your request
        '403':
          description: You do not have permission to access or manifest `shipments`
        '404':
          description: One or more `shipments` could not be found
  /shipments/state:
    put:
      tags:
        - Shipments
      summary: Change Shipment State
      description: "This endpoint can be used to manually change the `state` of a `shipment` to the provided value.\r\n            \r\n> Note: `shipment` `state` changes are controlled via a state machine which only allows certain `state`\r\ntransitions. For instance, you cannot transition a `shipment` from a `state` of `unallocated` to `allocated`\r\n- this `state` change can only be carried out by the Sorted platform as a result of a successful allocation.\r\nThis endpoint is provided to enable you to change the `state` of a `shipment` due to exceptional\r\ncircumstances, not as part of a standard workflow. Audit messages may be logged for all `state` transitions\r\nand will include details of the change initiator."
      parameters:
        - name: x-api-version
          in: header
          description: The version of the API to use.  Version `1.1` should be supplied with all requests.
          required: true
          style: simple
          schema:
            type: string
            description: The version of the API to use. Version `1.1` should be supplied with all requests.
      requestBody:
        description: A `shipment_state_change_request`
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ShipmentStateChangeRequest'
      responses:
        '200':
          description: The `state` has been updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sorted.Shipments.DataContracts.QuoteResult'
        '202':
          description: The request to update the `state` has been received successfully and will be processed
        '304':
          description: The `state` of the `shipment` has not been modified - the current `state` matches the `desired` state already
        '400':
          description: There is a validation error in your request
        '403':
          description: You do not have permission to change the `state` of the `shipment`
        '404':
          description: The `shipment` could not be found
components:
  schemas:
    Sorted.Shipments.DataContracts.ApiErrorMessage:
      type: object
      properties:
        property:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
      additionalProperties: false
    Sorted.Shipments.DataContracts.Link:
      required:
        - href
        - rel
        - type
      type: object
      properties:
        href:
          type: string
          description: The URL of the resource
        rel:
          type: string
          description: "A string representing the relationship of the linked resource to the current resource. For example, a\r\n`link` to a `shipment` will have a value of `shipment`. Links to the current object will have a `rel` of\r\n`self`."
        reference:
          type: string
          description: "When a `link` is a pointer to a resource with a unique reference, this property will contain the reference.\r\nFor instance, a `link` for a `shipment` will contain the `shipment's` reference in this field."
          nullable: true
        type:
          type: string
          description: The type of resource that this `link` points to.
      additionalProperties: false
      description: "A `link` object that provides a pointer to a resource. Links are provided, for example, following the\r\ncreation of a new resource (such as a `shipment`). The `link` will provide access to the created resource."
    Sorted.Shipments.DataContracts.ShipmentGroupResponse:
      required:
        - reference
      type: object
      properties:
        errors:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ApiErrorMessage'
          description: Any error(s) relating to the operation
          nullable: true
        reference:
          maxLength: 35
          minLength: 35
          type: string
          description: The unique reference for this resource generated by Sorted at the point of creation.
        custom_reference:
          type: string
          description: 'Your own custom reference for this object, if applicable.'
          nullable: true
        message:
          type: string
          description: An optional message relating to the result of the operation.
          nullable: true
        version:
          type: integer
          description: 'An optional version for this resource, if applicable.'
          format: int32
          nullable: true
        _links:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Link'
          description: 'Links to the current resource and any related resources, if applicable.'
          nullable: true
      additionalProperties: false
      description: Provides details of the result of an operation relating to a `shipment_group`
    Sorted.Shipments.DataContracts.Enums.ShipmentState:
      enum:
        - unallocated
        - allocating
        - allocation_failed
        - allocated
        - manifesting
        - manifest_failed
        - manifested
        - booking
        - booking_failed
        - booked
        - dispatched
        - at_drop_off_point
        - in_transit
        - delayed
        - out_for_delivery
        - delivery_failed
        - delivery_failed_card_left
        - delivered
        - partially_delivered
        - at_collection_point
        - returned_to_sender
        - action_required
        - missing
        - lost
        - damaged
        - cancelling
        - cancelled
        - in_transit_waiting
        - held_by_carrier
        - exchange_failed
        - at_customs
        - delivered_damaged
        - carrier_collected
        - customer_collected
        - carrier_collection_failed
        - customer_collection_failed
        - at_customer_collection_point
        - ready_to_ship
        - exchange_succeeded
        - awaiting_drop_off
        - carrier_changed
        - cleared_customs
        - destroyed
      type: string
      description: "Every `shipment` in Sorted has a `state` associated with it. Sorted manages `shipment` `states` by virtue of\r\na set of rules that determine transition rules between `states`."
    Sorted.Shipments.DataContracts.TaxRate:
      type: object
      properties:
        reference:
          type: string
          nullable: true
        country_iso_code:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        value:
          type: number
          format: double
      additionalProperties: false
    Sorted.Shipments.DataContracts.Tax:
      type: object
      properties:
        rate:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.TaxRate'
        amount:
          type: number
          format: double
      additionalProperties: false
    Sorted.Shipments.DataContracts.Price:
      required:
        - currency
        - gross
        - net
      type: object
      properties:
        net:
          type: number
          description: 'The price for this service exclusive of tax, in the provided `currency`.'
          format: double
        gross:
          type: number
          description: 'The price for this service inclusive of tax, in the provided `currency`.'
          format: double
        taxes:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Tax'
          description: The applicable tax for this `price`
          nullable: true
        currency:
          type: string
          description: The 3-character ISO code of the currency
      additionalProperties: false
      description: "The `price` object provides details of the `net` and `gross` price for a service, including\r\ncurrency and tax details."
    Sorted.Shipments.DataContracts.CarrierDetails:
      type: object
      properties:
        reference:
          maxLength: 50
          type: string
          description: The Sorted reference for this carrier.
          nullable: true
        name:
          type: string
          description: The name of this carrier.
          nullable: true
        service_reference:
          maxLength: 50
          type: string
          description: "The Sorted reference for this carrier service. Customers will have a `service_reference` that is unique\r\nto them for each carrier service."
          nullable: true
        service_name:
          type: string
          description: The friendly name for this carrier service.
          nullable: true
      additionalProperties: false
      description: "The `carrier_details` object provides details of a carrier and carrier service and is usually (but not\r\nalways) linked to an `allocation`."
    Sorted.Shipments.DataContracts.TrackingReference:
      required:
        - reference
      type: object
      properties:
        reference:
          type: string
          description: 'The unique reference for this object. For a `shipment`, this will be the reference of the `shipment`.'
        tracking_references:
          minItems: 0
          type: array
          items:
            type: string
          description: The tracking reference(s) assigned by the carrier.
          nullable: true
        _links:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Link'
          description: Any applicable links for this object.
          nullable: true
      additionalProperties: false
      description: This object provides details of tracking references for a `shipment` or `shipment_contents`.
    Sorted.Shipments.DataContracts.TrackingDetails:
      required:
        - shipment
      type: object
      properties:
        shipment:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.TrackingReference'
        contents:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.TrackingReference'
          description: 'The tracking reference(s), if applicable, for the `shipment_contents`.'
          nullable: true
      additionalProperties: false
      description: "This object provides details of tracking provided by the carrier at the point of allocation. Depending on\r\nthe carrier, tracking references may be provided for the whole `shipment`, or for the whole `shipment` and/or\r\nfor individual `shipment_contents`."
    Sorted.Shipments.DataContracts.ApiError:
      type: object
      properties:
        reference:
          type: string
          nullable: true
        correlation_id:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        details:
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ApiErrorMessage'
          nullable: true
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Link'
          nullable: true
      additionalProperties: false
    Sorted.Shipments.DataContracts.Enums.ExclusionCode:
      enum:
        - ex_other
        - ex_availability
        - ex_rates
        - ex_contents
        - ex_weight
        - ex_dims
        - ex_rules
        - ex_timeout
        - ex_circuit_open
        - ex_error
        - ex_sys_disabled
      type: string
      description: Describes the reason that a carrier service was excluded from a quote or allocation
    Sorted.Shipments.DataContracts.Exclusion:
      required:
        - code
        - reason
      type: object
      properties:
        reason:
          type: string
          description: A plain-text reason for the exclusion of this carrier or carrier service.
        code:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Enums.ExclusionCode'
      additionalProperties: false
      description: "The `exclusion` object provides details of the reasons for exclusion of a carrier or carrier service\r\nwhen generating quotes."
    Sorted.Shipments.DataContracts.ExcludedService:
      required:
        - carrier
        - exclusion
      type: object
      properties:
        carrier:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.CarrierDetails'
        exclusion:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Exclusion'
      additionalProperties: false
      description: "The `excluded_service` object provides details of carrier services that were unable to provide quotes. There\r\nare many reasons why a carrier service may not be able to provide a quote for any given shipment, and this\r\nobject provides high-level details."
    Sorted.Shipments.DataContracts.AllocateResult:
      required:
        - correlation_id
        - shipment_reference
        - state
      type: object
      properties:
        shipment_reference:
          maxLength: 35
          minLength: 35
          type: string
          description: The reference of the `shipment` that the result relates to.
        state:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Enums.ShipmentState'
        price:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Price'
        message:
          type: string
          description: "A plain-text message describing the result of the allocation attempt.\r\n            \r\n> Note: this should _not_ be used for application logic - use `state` to determine the success of the\r\noperation."
          nullable: true
        carrier:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.CarrierDetails'
        tracking_details:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.TrackingDetails'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Link'
          description: Links to any related resources such as `labels` or the `shipment`.
          nullable: true
        correlation_id:
          type: string
          description: A correlation id for this operation. This is useful in troubleshooting scenarios.
        details:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ApiError'
          description: 'Details of errors, if applicable.'
          nullable: true
        excluded_services:
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ExcludedService'
          description: "Details of excluded services, i.e. carrier services that are active in your account but who have not\r\nbeen able to provide a quote for this `shipment`."
          nullable: true
      additionalProperties: false
      description: "An `allocate_result` is returned for all requests to allocate a `shipment`. The object contains details of the operation\r\nresult, as well as the details of the allocation or, in the case of a failed allocation, details of the allocation failure."
    Sorted.Shipments.DataContracts.AllocateRequest:
      required:
        - shipments
      type: object
      properties:
        shipments:
          type: array
          items:
            type: string
      additionalProperties: false
    Sorted.Shipments.DataContracts.AllocationFilters:
      required:
        - direction
      type: object
      properties:
        direction:
          type: string
          description: The `direction` of the carrier services to select.
        tags:
          maxItems: 10
          minItems: 0
          type: array
          items:
            type: string
          description: "Filter carrier services to exclude any carrier services that do not have a 100% tag match.\r\nAll tags will be considered, and a service must have _all_ provided tags in order to be eligible for\r\nselection."
          nullable: true
        pickup:
          type: boolean
          description: "Indicates whether to include pick-up services or not (i.e. services where the consumer will collect\r\nthe `shipment` from a location)"
          nullable: true
        drop_off:
          type: boolean
          description: "Indicates whether to include drop-off services or not (i.e. services where the consumer will receive\r\nthe `shipment` to their location)."
          nullable: true
      additionalProperties: false
      description: "The `allocation_filters` object is used to selectively pre-filter carrier services prior to executing\r\nan allocation."
    Sorted.Shipments.DataContracts.AllocateWithFiltersRequest:
      required:
        - filters
        - shipments
      type: object
      properties:
        shipments:
          maxItems: 100
          minItems: 1
          type: array
          items:
            type: string
          description: "At least one valid reference must be provided. A maximum of 100 `shipments` can be allocated at once\r\nusing this method. This is to ensure continued optimal performance of the Sorted platform."
        filters:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.AllocationFilters'
      additionalProperties: false
      description: The `allocate_with_filters_request` is designed to allow a flexible method for allocating `shipments`.
    Sorted.Shipments.DataContracts.AllocateWithFiltersResult:
      required:
        - message
        - reference
      type: object
      properties:
        reference:
          type: string
          description: A unique reference for this result
        shipments:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Link'
          description: "Provides the references of (and links to) the `shipments` identified by the filters. Each `shipment`\r\nwill have been submitted for allocation."
          nullable: true
        message:
          type: string
          description: A plain-text message describing the result of the operation.
      additionalProperties: false
      description: Provides details of `shipments` identified and submitted by an `allocate_with_filters_request`.
    Sorted.Shipments.DataContracts.AllocateWithCarrierServiceRequest:
      required:
        - carrier_service_reference
        - shipments
      type: object
      properties:
        shipments:
          maxItems: 100
          minItems: 1
          type: array
          items:
            type: string
          description: The reference(s) of the `shipment(s)` to be allocated.
        carrier_service_reference:
          minLength: 1
          type: string
          description: The reference of the carrier service to allocate the `shipments` with.
      additionalProperties: false
      description: "The `allocate_with_carrier_service_request` is designed to facilitate allocate one or more `shipments`\r\nwith a specific carrier service. The cheapest option for that carrier service will automatically\r\nbe selected using this method."
    Sorted.Shipments.DataContracts.AllocateWithServiceGroupRequest:
      required:
        - service_group
        - shipments
      type: object
      properties:
        shipments:
          maxItems: 100
          minItems: 1
          type: array
          items:
            type: string
          description: The reference(s) of the `shipment(s)` to be allocated.
        service_group:
          minLength: 1
          type: string
          description: The reference of the carrier service group to allocate the `shipments` with.
      additionalProperties: false
      description: "The `allocate_with_service_group_request` is designed to facilitate allocating one or more `shipments`\r\nwith a carrier from a specific `service_group`. A `service_group` is a collection of one or more carrier\r\nservices that you can configure. The cheapest available service in a group will automatically be\r\nselected using this method."
    Sorted.Shipments.DataContracts.ResourceResult:
      required:
        - reference
      type: object
      properties:
        reference:
          maxLength: 35
          minLength: 35
          type: string
          description: The unique reference for this resource generated by Sorted at the point of creation.
        custom_reference:
          type: string
          description: 'Your own custom reference for this object, if applicable.'
          nullable: true
        message:
          type: string
          description: An optional message relating to the result of the operation.
          nullable: true
        version:
          type: integer
          description: 'An optional version for this resource, if applicable.'
          format: int32
          nullable: true
        _links:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Link'
          description: 'Links to the current resource and any related resources, if applicable.'
          nullable: true
      additionalProperties: false
      description: A `resource_result` is generally returned for all successful requests to create or modify resources.
    Sorted.Shipments.DataContracts.DateRange:
      type: object
      properties:
        start:
          type: string
          description: "The start of the date period, inclusive.\r\n            \r\nIf provided, must be prior to or equal to `end`"
          format: date-time
          nullable: true
        end:
          type: string
          description: "The end of the date period, inclusive.\r\n            \r\nIf provided, must be later than or equal to `start`"
          format: date-time
          nullable: true
        has_value:
          type: boolean
          description: "Indicates whether the object has a value or not.\r\n            \r\nNot applicable to requests."
          readOnly: true
      additionalProperties: false
      description: "The `date_range` object is used to indicate a period of time. The object may include any combination of\r\nvalues:\r\n            \r\n- A `start` and `end` indicates a complete range of dates (inclusive)\r\n- A `start` **only** indicates an open-ended date range, starting from a particular date (inclusive)\r\n- An `end` **only** indicates a date range with a fixed endpoint (inclusive)"
    Sorted.Shipments.DataContracts.Enums.MetadataType:
      enum:
        - 'null'
        - string
        - bool
        - date_time_offset
        - integer
        - decimal
        - url
      type: string
    Sorted.Shipments.DataContracts.Metadata:
      required:
        - key
        - type
        - value
      type: object
      properties:
        key:
          maxLength: 50
          minLength: 1
          type: string
          description: The key of this `metadata` item.
        value:
          maxLength: 100
          minLength: 1
          type: string
          description: The value of this `metadata` item
        type:
          type: string
          description: "The type of this `metadata` item, e.g. `string`, `bool`, `date_time_offset`, `integer`, `decimal`, `url`.\r\n            \r\nIf provided, must be a valid metadata type. Will default to `string` if not provided."
        metadata_type:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Enums.MetadataType'
      additionalProperties: false
      description: "`Metadata` is used in SortedPRO as a collection of properties that customers define, rather than fixed fields\r\nor properties defined by Sorted. SortedPRO may include functional extensions in the future that provide\r\nnew functionality based on `metadata`."
    Sorted.Shipments.DataContracts.TotalCustomsValue:
      required:
        - amount
        - currency
      type: object
      properties:
        amount:
          type: number
          description: The amount of the value
          format: double
        currency:
          minLength: 1
          type: string
          description: The currency of the amount
      additionalProperties: false
      description: Indicates the total value of the goods within a `shipment` for customs declaration purposes
    Sorted.Shipments.DataContracts.CustomsDocumentation:
      required:
        - category_type
      type: object
      properties:
        designated_person_responsible:
          maxLength: 100
          type: string
          description: The name of the person responsible for the `shipment_contents`.
          nullable: true
        importers_vat_number:
          maxLength: 50
          type: string
          description: 'The VAT number of the importer, if applicable.'
          nullable: true
        category_type:
          type: string
          description: "Indicates the category of goods for customs purposes.\r\n            \r\nMust be a valid `category_type` (`other`, `commercial_sample`, `gift`, `returned_goods`, `documents`)"
        category_type_explanation:
          maxLength: 100
          type: string
          description: Free text explanation indicating the reason for the selection of the `category_type`.
          nullable: true
        shippers_customs_reference:
          maxLength: 50
          type: string
          description: 'The shipper''s customs reference, if known.'
          nullable: true
        importers_tax_code:
          maxLength: 25
          type: string
          description: 'The importer''s tax code, if known.'
          nullable: true
        importers_telephone:
          maxLength: 25
          type: string
          description: 'The importer''s telephone number, if known.'
          nullable: true
        importers_fax:
          maxLength: 25
          type: string
          description: 'The importer''s fax number, if known.'
          nullable: true
        importers_email:
          maxLength: 100
          type: string
          description: 'The importer''s email address, if known.'
          nullable: true
        cn23_comments:
          maxLength: 500
          type: string
          description: Comments used to populate section 11 of CN23 customs documentation.
          nullable: true
        attached_invoice_references:
          maxItems: 20
          type: array
          items:
            type: string
          description: A list of zero or more attached invoice references.
          nullable: true
        attached_certificate_references:
          maxItems: 20
          type: array
          items:
            type: string
          description: A list of zero or more attached certificate references.
          nullable: true
        attached_licence_references:
          maxItems: 20
          type: array
          items:
            type: string
          description: A list of zero or more attached licence references.
          nullable: true
        declaration_date:
          type: string
          description: "The date and time of the customs declaration.\r\n            \r\nIf not known, will default to the date and time of the creation of the `shipment` (UTC)."
          format: date-time
          nullable: true
        reason_for_export:
          maxLength: 100
          type: string
          description: The reason for export of the goods contained in the `shipment`
          nullable: true
        shippers_vat_number:
          maxLength: 50
          type: string
          description: 'The shipper''s VAT number, if known.'
          nullable: true
        receivers_tax_code:
          maxLength: 25
          type: string
          description: 'The receiver''s tax code, if known.'
          nullable: true
        receivers_vat_number:
          maxLength: 50
          type: string
          description: 'The receiver''s VAT number, if known.'
          nullable: true
        invoice_date:
          type: string
          description: "The date and time of the invoice for the goods.\r\n            \r\nIf not provided, will default to the date and time of the creation of the `shipment`."
          format: date-time
          nullable: true
        eori_number:
          maxLength: 15
          minLength: 1
          type: string
          description: The sender's EORI (Economic Operators Registration and Identification) number.
        invoice_number:
          maxLength: 50
          type: string
          description: 'The invoice number, if applicable.'
          nullable: true
        office_of_origin:
          maxLength: 50
          type: string
          description: 'The office of origin ([Madrid Protocol](https://en.wikipedia.org/wiki/Madrid_system))'
          nullable: true
        total_customs_value:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.TotalCustomsValue'
      additionalProperties: false
      description: "Customs documentation details can be provided when creating `shipments` for which customs document(s) will\r\nbe required. This information should be created prior to allocation for documents to be generated\r\nsuccessfully."
    Sorted.Shipments.DataContracts.Weight:
      required:
        - unit
        - value
      type: object
      properties:
        value:
          type: number
          description: The value of weight in the specified unit.
          format: double
        unit:
          type: string
          description: "The unit of weight.\r\n            \r\nMust be a valid weight unit (`kg`, `lbs`)"
      additionalProperties: false
      description: "The `weight` object is used to define the weight of items within a `shipment`. `Weight` contains both the\r\nvalues and the unit of measurement.\r\n            \r\n> Note: all values within a single `shipment` must be the same, i.e. you cannot combine `weight_unit` values\r\nwithin a single `shipment`."
    Sorted.Shipments.DataContracts.Dimensions:
      required:
        - height
        - length
        - unit
      type: object
      properties:
        length:
          type: number
          description: "The length in the specified unit.\r\n            \r\n> Note: length should be the _longest_ of the three dimensions provided. **Sorted will re-arrange dimensions\r\nif your request does not follow this rule.**"
          format: double
        height:
          type: number
          description: The height in the specified unit.
          format: double
        width:
          type: number
          description: The width in the specified unit.
          format: double
        unit:
          minLength: 1
          type: string
          description: 'The unit of these dimensions (`cm`, `in`).'
      additionalProperties: false
      description: "The `dimensions` object is used to specify the dimensions of the contents of a `shipment`. The `dimensions`\r\nobject contains both the individual dimensions and the unit of measurement."
    Sorted.Shipments.DataContracts.Value:
      required:
        - amount
        - currency
      type: object
      properties:
        amount:
          type: number
          description: "The amount in the specified unit.\r\n            \r\nMust be a valid positive decimal.\r\n            \r\n> Note: Values are saved by SortedPRO with a precision up to 5 decimal places only."
          format: double
        currency:
          minLength: 1
          type: string
          description: "The ISO code of the currency.\r\n            \r\nMust be a valid 3-letter ISO currency code (e.g. `GBP`, `USD`, `EUR`, `NZD`)"
        discount:
          type: number
          description: "Used to indicate the proportion of discount applied, if applicable. A value of `100` indicates a 100%\r\ndiscount.\r\n            \r\nIf provided, must be a valid decimal between `0` and `100` representing the percentage discount. For\r\nexample, `10.5` represents a discount of 10.5%."
          format: double
          nullable: true
      additionalProperties: false
      description: "This object represents the `value` of `contents` within a `shipment`. The value property includes both the\r\namount of the currency of the value."
    Sorted.Shipments.DataContracts.HazardClass:
      type: object
      properties:
        code:
          type: string
          nullable: true
      additionalProperties: false
    Sorted.Shipments.DataContracts.DangerousGoods:
      type: object
      properties:
        id_number:
          maxLength: 50
          minLength: 1
          type: string
          description: The UN code / ID code of NA code of the contents.
          nullable: true
        proper_shipping_name:
          maxLength: 255
          type: string
          description: The proper shipping name for the goods.
          nullable: true
        technical_name:
          maxLength: 255
          type: string
          description: The technical name for the goods.
          nullable: true
        custom_label_text:
          maxLength: 255
          type: string
          description: Custom text to be displayed on labels for these goods.
          nullable: true
        hazard_classes:
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.HazardClass'
          description: "The IATA hazard classes assigned to the contents.\r\n            \r\nEach entry must be a valid hazard class."
          nullable: true
        packing_group:
          type: string
          description: "The `packing_group` for the contents.\r\n            \r\nIf provided, must be a valid `packing_group` (`i` = \"high danger\", `ii` = \"medium danger\", `iii` = \"low\r\ndanger\"."
          nullable: true
        physical_form:
          type: string
          description: "The physical form of the goods.\r\n            \r\nIf provided, must be a valid `physical_form` (`gas`, `liquid`, `solid`, `other`)"
          nullable: true
        radioactivity:
          type: string
          description: "The radioactivity of the goods.\r\n            \r\nIf provided, must be a valid `radioactivity` value (`none`, `surface_reading`, `transport_index`,\r\n`criticality_safety_index`)"
          nullable: true
        accessibility:
          type: string
          description: "The accessibility of the goods.\r\n            \r\nIf provided, must be a valid `accessibility` value (`accessible`, `inaccessible`)"
          nullable: true
      additionalProperties: false
      description: "The `dangerous_goods` object is used to provide details of dangerous or hazardous contents. Not all carriers\r\nwill carry all goods and providing details of dangerous goods could preclude certain carriers from being\r\nable to quote for a specific `shipment`."
    Sorted.Shipments.DataContracts.LabelProperty:
      required:
        - key
        - value
      type: object
      properties:
        key:
          maxLength: 50
          minLength: 1
          type: string
          description: The key of the property - this is used to identify this specific property in any dependent logic.
        value:
          maxLength: 500
          minLength: 1
          type: string
          description: The value of this property.
      additionalProperties: false
      description: "The `label_property` object is used to provide additional properties to be placed on a label. SortedPRO\r\nsupports custom label decorators which utilise additional label space to add fields and text. The\r\n`label_property` object is used to provide this information. The specific keys and values should be agreed\r\nbetween customers and account managers as part of the on-boarding process."
    Sorted.Shipments.DataContracts.ShipmentContents:
      required:
        - value
      type: object
      properties:
        reference:
          type: string
          description: "The unique reference generated by Sorted.\r\n            \r\nNot applicable for requests to create `shipments`."
          nullable: true
        custom_reference:
          maxLength: 50
          minLength: 1
          type: string
          description: The customer's own reference for these contents.
        package_size_reference:
          maxLength: 50
          type: string
          description: "The reference of an existing pre-defined package size within SortedPRO. If provided, `weight` and\r\n`dimensions` are not required.\r\n            \r\nIf provided, must be a valid reference for an existing package size within your account."
          nullable: true
        weight:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Weight'
        dimensions:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Dimensions'
        value:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Value'
        sku:
          maxLength: 50
          minLength: 1
          type: string
          description: The stock-keeping unit (SKU) of the contents.
        description:
          maxLength: 100
          type: string
          description: "A description of the contents.\r\n            \r\nThis is used for display purposes and inclusion in customs documentation."
          nullable: true
        model:
          maxLength: 50
          minLength: 1
          type: string
          description: The model of the contents.
        country_of_origin:
          type: string
          description: "The 3-letter ISO code representing the country of origin of the contents.\r\n            \r\nIf provided, must be a valid 2-letter country ISO code (e.g. `US`, `GB`, `DE`, etc.)"
          nullable: true
        harmonisation_code:
          maxLength: 25
          type: string
          description: "The harmonisation code for the contents.\r\n            \r\nIf provided, must be a valid format of harmonisation code e.g. `09.02.10`."
          nullable: true
        shipping_terms:
          type: string
          description: "The `shipping_terms` according to the [Incoterms](https://en.wikipedia.org/wiki/Incoterms) rules.\r\nMust be a valid value ('exw`, `fca`, `cpt`, `cip`, `dat`, `dap`, `ddp`, `fas`, `fob`, `cfr`, `cif`, `ddu`)"
          nullable: true
        quantity:
          type: integer
          description: "The quantity of contents.\r\n            \r\nIf not provided, will default to 1. Must be a valid positive integer."
          format: int32
        unit:
          maxLength: 50
          minLength: 1
          type: string
          description: 'The unit of packing of the contents, e.g. "box"'
        dangerous_goods:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.DangerousGoods'
        metadata:
          maxItems: 10
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Metadata'
          description: "Additional properties to apply to the contents. Additional functionality can be linked to properties\r\nspecified in `metadata`."
          nullable: true
        label_properties:
          maxItems: 10
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.LabelProperty'
          description: Values to be used in the generation or decoration of labels at contents level.
          nullable: true
        contents:
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ShipmentContents'
          description: "The contents of these contents, if applicable.\r\n            \r\nIf provided, a maximum \"depth\" of 2 is permitted, i.e. `shipment_contents` can contain `shipment_contents`,\r\nbut those `shipment_contents` cannot additionally contain `shipment_contents`."
          nullable: true
      additionalProperties: false
      description: "All `shipments` in SortedPRO require _at least one_ `shipment_contents` object. This object represents\r\nthe contents of the `shipment`. For example, a `shipment` of pair of shoes will contain will contain one\r\n`shipment_contents` object which defines the properties of the pair of shoes (e.g. `dimensions`, `weight`, etc.)"
    Sorted.Shipments.DataContracts.ContactDetails:
      required:
        - email
      type: object
      properties:
        landline:
          maxLength: 100
          minLength: 1
          type: string
          description: "The landline telephone number of the `contact`.\r\n            \r\nAt least one of `landline` and/or `mobile` **must** be provided."
        mobile:
          maxLength: 100
          minLength: 1
          type: string
          description: "The mobile telephone number of the `contact`.\r\n            \r\nAt least one of `landline` and/or `mobile` **must** be provided."
        email:
          maxLength: 255
          minLength: 1
          type: string
          description: "The email address of the contact.\r\n            \r\nMust be a valid email address format."
      additionalProperties: false
      description: "The `contact_details` object is used to capture details used to contact a person, such as telephone number(s) or\r\nemail addresses."
    Sorted.Shipments.DataContracts.Contact:
      required:
        - contact_details
        - first_name
        - last_name
      type: object
      properties:
        reference:
          maxLength: 50
          minLength: 1
          type: string
          description: 'Your own reference for this `contact`, if applicable.'
        title:
          maxLength: 50
          minLength: 1
          type: string
          description: 'The title or salutation of the `contact` (e.g. `Mr`, `Mrs`, `Señor`).'
        first_name:
          maxLength: 100
          minLength: 1
          type: string
          description: The first name / forename of the `contact`.
        last_name:
          maxLength: 100
          minLength: 1
          type: string
          description: The last name / surname of the `contact`.
        middle_name:
          maxLength: 100
          minLength: 1
          type: string
          description: 'The middle name(s) of the `contact`, if applicable.'
        position:
          maxLength: 100
          minLength: 1
          type: string
          description: 'The position / job title of the `contact`, if applicable.'
        contact_details:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ContactDetails'
      additionalProperties: false
      description: "An `address` must always include a `contact`, except when the `address` utilises a pre-defined shipping\r\nlocation (which already has a `contact` defined). When providing a `shipping_location_reference` you may\r\nexclude the `contact` property, in which case the `address` will inherit the `contact` from the shipping\r\nlocation. However, you may also provide a `shipping_location_reference` _and_ a `contact`, in which case the\r\nprovided `contact` will supersede the `contact` from the shipping location, for the specific `shipment` only."
    Sorted.Shipments.DataContracts.LatLong:
      type: object
      properties:
        latitude:
          maximum: 180
          minimum: -180
          type: number
          format: double
        longitude:
          maximum: 90
          minimum: -90
          type: number
          format: double
      additionalProperties: false
    Sorted.Shipments.DataContracts.Reservation:
      type: object
      properties:
        reference:
          type: string
          description: "The unique reference generated by Sorted for this reservation.\r\n            \r\nThis is not applicable to requests to create `shipments`."
          nullable: true
        location_reference:
          type: string
          description: The reference of the location.
          nullable: true
        external_reference:
          type: string
          description: "The external reference of this reservation, e.g. the reference provided by the carrier for the\r\nreservation booking."
          nullable: true
      additionalProperties: false
      description: "The `reservation` property is used by Sorted internally to store reservation information for a `pickup_location`.\r\nThis will be used where a pick-up location has to be reserved in advance."
    Sorted.Shipments.DataContracts.Address:
      required:
        - address_line1
        - address_type
        - country_iso_code
      type: object
      properties:
        address_type:
          minLength: 1
          type: string
          description: "The type of address (e.g. `origin`, `destination`, `return`, `sender`, `recipient`, `importer`,\r\n`exporter`, `billing`).\r\n            \r\nOnly one address of each type may be included in any `shipment`. Additionally, `importer` and `exporter`\r\naddresses are mutually exclusive within a single `shipment`."
        shipping_location_reference:
          maxLength: 50
          type: string
          description: "Used to reference a pre-defined shipping location. This property is _required_ for `scheduled` `shipments`\r\nbut is optional for `on_demand` `shipments`. I.e. for `scheduled` `shipments` at least _one_ of `origin` or\r\n`destination` must reference an existing shipping location (normally the `origin` address)."
          nullable: true
        custom_reference:
          maxLength: 50
          type: string
          description: 'Your own reference for this address, if applicable.'
          nullable: true
        contact:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Contact'
        company_name:
          maxLength: 100
          type: string
          description: 'The name of the company, if applicable.'
          nullable: true
        property_number:
          maxLength: 50
          minLength: 1
          type: string
          description: 'The number of the property, if applicable.'
        property_name:
          maxLength: 50
          minLength: 1
          type: string
          description: 'The name of the property, if applicable.'
        address_line1:
          maxLength: 255
          minLength: 1
          type: string
          description: "The first line of the address.\r\n            \r\nRequired _unless_ `shipping_location_reference` is provided."
        address_line2:
          maxLength: 255
          minLength: 1
          type: string
          description: The second line of the address.
        address_line3:
          maxLength: 255
          minLength: 1
          type: string
          description: The third line of the address.
        locality:
          maxLength: 255
          minLength: 1
          type: string
          description: 'The locality of the address. This may be, for example, a city or town.'
        region:
          type: string
          description: "The region of the address. This could be a county (in the UK) or a state (in the US) for example.\r\n            \r\nThis property is _required_ for some countries, e.g. `US`, `CA`, `IE`, `AU`. If provided for a required\r\ncountry, Sorted will accept either official abbreviations of full names and will convert between values\r\nas required. For example, the values `AL` or `Alabama` would be accepted for the country `US`."
          nullable: true
        postal_code:
          type: string
          description: "The postal code / zip code of the address.\r\n            \r\nThis property is required for countries with official postal code systems. The provided `postal_code` must\r\nbe in a valid format for the country."
          nullable: true
        country_iso_code:
          maxLength: 2
          minLength: 2
          type: string
          description: "The `ISO 3166 Alpha 2` code for the country of the location.\r\n            \r\nThe value provided must be exactly 2 characters and must be a valid country ISO code."
        lat_long:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.LatLong'
        reservation:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Reservation'
        national_address:
          type: string
          description: "The national address.\r\n            \r\nThis property is required for certain countries/territories e.g. Saudi Arabia (`SA`)"
          nullable: true
        special_instructions:
          maxLength: 150
          type: string
          description: Special instructions for the address.
          nullable: true
      additionalProperties: false
      description: "The details of an address. Each `shipment` must have at least 2 address; one of type `origin` and one of type\r\n`destination`. Other `address_types` are optional.\r\n            \r\n> Note: It is only possible to provide at most one of each type of address (e.g. 1 origin address only)."
    Sorted.Shipments.DataContracts.CreateShipmentRequest:
      required:
        - addresses
        - contents
        - direction
        - shipment_type
      type: object
      properties:
        custom_reference:
          maxLength: 50
          type: string
          description: A custom reference provided by the customer.
          nullable: true
        required_delivery_date:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.DateRange'
        required_shipping_date:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.DateRange'
        tags:
          maxItems: 10
          type: array
          items:
            type: string
          description: "Custom tags to apply to the `shipment`\r\n            \r\nIf provided, each `tag` is limited to 50 characters. There is a limit of 10 tags per `shipment`"
          nullable: true
        order_date:
          type: string
          description: "The date that the items in the `shipment` were ordered.\r\nThis can be used to tracking `shipments` vs order dates in customers' own systems.\r\n            \r\nIf provided, must be a valid `ISO8601` date time, including offset. Sorted will _not_ validate the logic\r\nof the date value compared to other relevant dates."
          format: date-time
          nullable: true
        metadata:
          maxItems: 10
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Metadata'
          description: "Addition properties to apply to a `shipment`. Additional functionality can be linked to properties\r\nspecified in `metadata`."
          nullable: true
        customs_documentation:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.CustomsDocumentation'
        direction:
          type: string
          description: 'Indicates the `direction` of the `shipment`, e.g. `outbound`, `inbound`'
        shipment_type:
          minLength: 1
          type: string
          description: 'Indicates the type of `shipment`, e.g. `scheduled`, `on_demand`'
        contents:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ShipmentContents'
          description: "The contents of the `shipment`\r\n            \r\nAt least one `shipment_contents` is required."
        addresses:
          minItems: 2
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Address'
          description: "The addresses for this `shipment`.\r\n            \r\nMust contain at least an `origin` and a `destination` address. Only one of each type of address may be\r\nprovided."
        label_properties:
          maxItems: 10
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.LabelProperty'
          description: Values to be used in the generation or decoration of labels.
          nullable: true
        source:
          maxLength: 50
          type: string
          description: "Indicates the source of the `shipment`.\r\n            \r\nIf not provided, will default to `api`. If provided, a maximum length of 50 characters is permitted."
          nullable: true
        tenant:
          maxLength: 50
          type: string
          description: 'The `tenant` that the `shipment` is linked to, if applicable.'
          nullable: true
        channel:
          maxLength: 50
          type: string
          description: 'The `channel` that the `shipment` is linked to, if applicable.'
          nullable: true
      additionalProperties: false
      description: "A `shipment` is a collection of one or more packages sent together from a single `origin` address to a single\r\n`destination` address. A `create_shipment_request` is used to create a new `shipment` or to create `quotes`\r\nfor a `shipment` that does not yet exist within SortedPRO."
    Sorted.Shipments.DataContracts.ShipmentSummary:
      required:
        - addresses
        - reference
      type: object
      properties:
        reference:
          maxLength: 35
          minLength: 35
          type: string
          description: The unique reference for this `shipment`
        addresses:
          maxItems: 7
          minItems: 2
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Address'
          description: The `addresses` relating to this `shipment`
        custom_reference:
          type: string
          description: The custom reference applied by the customer for this `shipment`
          nullable: true
        _links:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Link'
          description: 'Provides `links` to related resources, such as the `shipment` object'
          nullable: true
      additionalProperties: false
      description: "A `shipment_summary` is returned in a `quote` and provides summary details of the `shipment` that a `quote`\r\nrelates to"
    Sorted.Shipments.DataContracts.Enums.ApplicationType:
      enum:
        - none
        - standard
        - retrospective
      type: string
    Sorted.Shipments.DataContracts.Enums.SurchargeType:
      enum:
        - additive
        - variable
      type: string
    Sorted.Shipments.DataContracts.BaseApplication:
      type: object
      properties:
        base:
          type: boolean
        base_only:
          type: boolean
      additionalProperties: false
    Sorted.Shipments.DataContracts.Enums.CalculationModel:
      enum:
        - fixed
        - calculated
      type: string
    Sorted.Shipments.DataContracts.Surcharge:
      type: object
      properties:
        reference:
          type: string
          nullable: true
        currency:
          type: string
          nullable: true
        value:
          type: number
          format: double
        application_type:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Enums.ApplicationType'
        type:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Enums.SurchargeType'
        base_application:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.BaseApplication'
        calculation_model:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Enums.CalculationModel'
        incremental_unit_factor:
          type: number
          format: double
          nullable: true
        incremental_unit_price:
          type: number
          format: double
          nullable: true
        minimum_value:
          type: number
          format: double
          nullable: true
        maximum_value:
          type: number
          format: double
          nullable: true
        label:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    Sorted.Shipments.DataContracts.Quote:
      type: object
      properties:
        reference:
          type: string
          nullable: true
        shipment_reference:
          type: string
          nullable: true
        carrier:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.CarrierDetails'
        collection_date:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.DateRange'
        delivery_date:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.DateRange'
        price:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Price'
        surcharges:
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Surcharge'
          nullable: true
        created:
          type: string
          format: date-time
        expires:
          type: string
          format: date-time
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Link'
          nullable: true
      additionalProperties: false
    Sorted.Shipments.DataContracts.QuoteResult:
      required:
        - message
        - reference
        - shipment
      type: object
      properties:
        reference:
          maxLength: 35
          minLength: 35
          type: string
          description: A unique reference for this collection of quotes.
        message:
          type: string
          description: A plain-text message providing a summary of the results.
        shipment:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ShipmentSummary'
        quotes:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Quote'
          description: 'Details of the carrier(s), service(s), and price(s)'
          nullable: true
        excluded_services:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ExcludedService'
          description: 'Details of active services within your account that could not provide a `quote`, including reasons.'
          nullable: true
      additionalProperties: false
      description: A `quote_result` is returned when you request `quotes` for a `shipment`.
    Sorted.Shipments.DataContracts.UpdateShipmentRequest:
      required:
        - addresses
        - contents
        - direction
        - reference
        - shipment_type
      type: object
      properties:
        reference:
          maxLength: 35
          minLength: 35
          type: string
          description: The unique Sorted reference for the `shipment`.
        custom_reference:
          maxLength: 50
          minLength: 1
          type: string
          description: Your own custom reference for this `shipment`.
          nullable: true
        required_delivery_date:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.DateRange'
        required_shipping_date:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.DateRange'
        tags:
          maxItems: 10
          type: array
          items:
            type: string
          description: "Custom tags to apply to the `shipment`\r\n            \r\nIf provided, each `tag` is limited to 50 characters. There is a limit of 10 tags per `shipment`"
          nullable: true
        order_date:
          type: string
          description: "The date that the items in the `shipment` were ordered.\r\nThis can be used to tracking `shipments` vs order dates in customers' own systems.\r\n            \r\nIf provided, must be a valid `ISO8601` date time, including offset. Sorted will _not_ validate the logic\r\nof the date value compared to other relevant dates."
          format: date-time
          nullable: true
        metadata:
          maxItems: 10
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Metadata'
          description: "Addition properties to apply to a `shipment`. Additional functionality can be linked to properties\r\nspecified in `metadata`."
          nullable: true
        customs_documentation:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.CustomsDocumentation'
        direction:
          type: string
          description: 'Indicates the `direction` of the `shipment`, e.g. `outbound`, `inbound`'
        shipment_type:
          minLength: 1
          type: string
          description: 'Indicates the type of `shipment`, e.g. `scheduled`, `on_demand`'
        contents:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ShipmentContents'
          description: "The contents of the `shipment`\r\n            \r\nAt least one `shipment_contents` is required."
        addresses:
          minItems: 2
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Address'
          description: "The addresses for this `shipment`.\r\n            \r\nMust contain at least an `origin` and a `destination` address. Only one of each type of address may be\r\nprovided."
        label_properties:
          maxItems: 10
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.LabelProperty'
          description: Values to be used in the generation or decoration of labels.
          nullable: true
        source:
          maxLength: 50
          type: string
          description: "Indicates the source of the `shipment`.\r\n            \r\nIf not provided, will default to `api`. If provided, a maximum length of 50 characters is permitted."
          nullable: true
        tenant:
          maxLength: 50
          type: string
          description: 'The `tenant` that the `shipment` is linked to, if applicable.'
          nullable: true
        channel:
          maxLength: 50
          type: string
          description: 'The `channel` that the `shipment` is linked to, if applicable.'
          nullable: true
      additionalProperties: false
      description: "The `update_shipment_request` is used to update an existing `shipment`.\r\n            \r\n> Note: All properties in an `update_shipment_request` should be provided when updating the `shipment`, i.e.\r\ncustomers should provide the full details of the `shipment` rather than just including properties they wish to\r\nupdate. The properties provided will replace the _entire_ `shipment` object. There are some system-generated\r\nproperties of a `shipment` that cannot be modified, such as `allocation` and `_links`."
    Sorted.Shipments.DataContracts.CreateShipmentGroupRequest:
      required:
        - shipments
      type: object
      properties:
        shipments:
          maxItems: 10000
          minItems: 1
          type: array
          items:
            type: string
          description: Must contain at least one valid `shipment` reference. All references included must be valid existing `shipment` references. All `shipments` must be in a valid `state`.
        custom_reference:
          maxLength: 50
          minLength: 5
          type: string
          description: 'Optional. If provided, the reference must be unique within your account for open `shipment_groups`. You cannot have multiple open `shipment_groups` with the same `custom_reference`.'
          nullable: true
      additionalProperties: false
      description: This object is used to create a new `shipment_group`.
    Sorted.Shipments.DataContracts.UpdateShipmentGroupRequest:
      required:
        - reference
      type: object
      properties:
        reference:
          maxLength: 35
          minLength: 0
          type: string
          description: The `reference` of the `shipment_group` to update. Must be a valid reference for an existing `shipment_group`.
        add_shipments:
          maxItems: 10000
          minItems: 1
          type: array
          items:
            type: string
          description: "Optional. If provided, must contain at least 1 valid existing `shipment` reference that is not currently a member of the `shipment_group`\r\nand is not a member of any other _open_ `shipment_group`."
          nullable: true
        remove_shipments:
          maxItems: 10000
          minItems: 1
          type: array
          items:
            type: string
          description: 'Optional. If provided, must contain at least 1 valid existing `shipment` reference that _is currently a member_ of the `shipment_group`.'
          nullable: true
      additionalProperties: false
      description: This object is used to update an existing `shipment_group`
    Sorted.Shipments.DataContracts.Allocation:
      required:
        - allocation_date
        - carrier
        - price
      type: object
      properties:
        carrier:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.CarrierDetails'
        allocation_date:
          type: string
          description: The date and time at which this allocation was created.
          format: date-time
        price:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Price'
        tracking_details:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.TrackingDetails'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Link'
          description: Links to related resources such as labels
          nullable: true
      additionalProperties: false
      description: "The `allocation` object provides details of the active allocation for a `shipment`, if applicable. A `shipment`\r\nwill only have an _active_ allocation when it has been allocated to a carrier service for delivery or\r\ncollection. Any `shipment` that has not yet been allocated will have a `null` value for allocation."
    Sorted.Shipments.DataContracts.LabelDetails:
      required:
        - retrieval_count
      type: object
      properties:
        date_first_retrieved:
          type: string
          description: 'The date and time that the label was first retrieved, if applicable.'
          format: date-time
          nullable: true
        retrieval_count:
          type: integer
          description: The number of times that the label for this allocation has been retrieved.
          format: int32
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Link'
          description: 'Links to related resources, such as a link to the label'
          nullable: true
      additionalProperties: false
      description: The `label_details` object provides details of label retrieval.
    Sorted.Shipments.DataContracts.Enums.Direction:
      enum:
        - outbound
        - inbound
      type: string
      description: "The `direction` property of a `shipment` indicates whether the `shipment` is intended to be sent _to_ a\r\nconsumer or received _by_ a consumer.\r\n            \r\nGenerally, a return will have a `direction` of `inbound` and all other `shipments` will have a `direction` of\r\n`outbound`.\r\n            \r\nIf not provided, the `direction` property will always default to `outbound`."
    Sorted.Shipments.DataContracts.Enums.ShipmentType:
      enum:
        - scheduled
        - on_demand
      type: string
      description: "The `shipment_type` property indicates whether the `shipment` is intended to be allocated with a on-demand\r\nservice (`on_demand`) or with a scheduled service (`scheduled`) or either.\r\n            \r\nGenerally, warehouse-based operations will utilise `scheduled` `shipments` only."
    Sorted.Shipments.DataContracts.Enums.PaperlessDocumentState:
      enum:
        - document_created
        - pending
        - processing
        - ready
        - virus_found
        - quarantined
        - removed
      type: string
    Sorted.Shipments.DataContracts.Enums.PaperlessDocumentType:
      enum:
        - commercial_invoice
        - certificate_of_origin
        - nafta_certificate_of_origin
        - pro_forma_invoice
        - authorisation_form
        - export_document
        - export_licence
        - import_permit
        - power_of_attorney
        - packing_list
        - sed_document
        - letter_of_instruction
        - customs_declaration
        - air_waybill
        - invoice
        - other
      type: string
    Sorted.Shipments.DataContracts.Enums.PaperlessFileFormat:
      enum:
        - pdf
        - png
        - jpg
        - gif
      type: string
    Sorted.Shipments.DataContracts.Enums.PaperlessUsage:
      enum:
        - electronic_trade
        - customer_information
        - pricing
      type: string
    Sorted.Shipments.DataContracts.PaperlessDocument:
      required:
        - document_state
        - document_type
        - file_format
      type: object
      properties:
        document_reference:
          type: string
          description: A unique reference for the document generated by Sorted.
          nullable: true
        document_state:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Enums.PaperlessDocumentState'
        document_type:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Enums.PaperlessDocumentType'
        file_format:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Enums.PaperlessFileFormat'
        usage:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Enums.PaperlessUsage'
        expiration:
          type: string
          description: 'The date and time that the document expires, if applicable.'
          format: date-time
      additionalProperties: false
      description: "This object allows a customer to supply documents when creating `shipments`.\r\n            \r\nThe intention of allowing customers to supply documents is to allow original copies of documents such as\r\ncertificates of conformity to be supplied to carriers in a paperless trade flow.\r\n            \r\nNote: not all carriers support paperless trade."
    Sorted.Shipments.DataContracts.Shipment:
      required:
        - addresses
        - contents
        - created
        - reference
        - source
        - state
      type: object
      properties:
        reference:
          type: string
          description: "The reference assigned by Sorted for this `shipment`. This will be unique for all shipments and will be in\r\nthe format `sp_[0-9]{32}` e.g. `sp_00869674326844799393722231947268`"
        state:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Enums.ShipmentState'
        created:
          type: string
          description: The date and time that the `shipment` was originally created
          format: date-time
        updated:
          type: string
          description: 'The date and time that the `shipment` was last updated, if applicable.'
          format: date-time
          nullable: true
        shipping_date:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.DateRange'
        required_shipping_date:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.DateRange'
        expected_delivery_date:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.DateRange'
        required_delivery_date:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.DateRange'
        actual_delivery_date:
          type: string
          description: 'The actual date and time that the `shipment` was delivered, if applicable.'
          format: date-time
          nullable: true
        allocation:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Allocation'
        label_details:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.LabelDetails'
        custom_reference:
          type: string
          description: 'The custom reference provided for this `shipment`, if applicable.'
          nullable: true
        tags:
          maxItems: 10
          type: array
          items:
            type: string
          description: 'The tags provided for this `shipment`, if applicable.'
          nullable: true
        order_date:
          type: string
          description: 'The order date for this `shipment`, if applicable.'
          format: date-time
          nullable: true
        metadata:
          maxItems: 10
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Metadata'
          description: 'The `metadata` for this `shipment`, if applicable.'
          nullable: true
        customs_documentation:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.CustomsDocumentation'
        direction:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Enums.Direction'
        shipment_type:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Enums.ShipmentType'
        contents:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ShipmentContents'
          description: The contents of the `shipment`
        addresses:
          minItems: 2
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Address'
          description: "The `addresses` for this `shipment`. Must contain at least an `origin` address _and_ a `destination`\r\naddress."
        label_properties:
          maxItems: 10
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.LabelProperty'
          description: Additional properties used to render or decorate labels.
          nullable: true
        source:
          type: string
          description: "The source of the `shipment`.\r\n            \r\nWill default to `api` if not provided when the `shipment` was created."
        reservation:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Reservation'
        paperless_documents:
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.PaperlessDocument'
          description: Provides details of `paperless_documents` that apply to this `shipment`
          nullable: true
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Link'
          description: Links to any related resources.
          nullable: true
        tenant:
          maxLength: 50
          type: string
          description: 'The `tenant` that the `shipment` is linked to, if applicable.'
          nullable: true
        channel:
          maxLength: 50
          type: string
          description: 'The `channel` that the `shipment` is linked to, if applicable.'
          nullable: true
      additionalProperties: false
      description: "A `shipment` is created using a `create_shipment_request` and Sorted will then conduct all operations on the\r\n`shipment` object."
    Sorted.Shipments.DataContracts.Enums.ContentType:
      enum:
        - pdf
        - zpl
      type: string
    Sorted.Shipments.DataContracts.Enums.DocumentType:
      enum:
        - other
        - label
        - cn22
        - cn23
        - commercial_invoice
        - collection_note
        - hazard_label
      type: string
    Sorted.Shipments.DataContracts.Document:
      required:
        - content_type
        - document_type
        - dpi
        - file
      type: object
      properties:
        file:
          type: string
          description: The contents of the file encoded in base64
        content_type:
          type: string
          description: 'The format of the document (`application/pdf`, `text/plain`)'
        document_type:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Enums.DocumentType'
        dpi:
          type: integer
          description: The DPI of the document (e.g. `203`)
          format: int32
      additionalProperties: false
      description: This object represents a single document.
    Sorted.Shipments.DataContracts.Manifest:
      required:
        - created
        - reference
        - shipments
      type: object
      properties:
        reference:
          type: string
          description: The unique reference for this `manifest` generated by Sorted
        shipments:
          minItems: 1
          type: array
          items:
            type: string
          description: Provides the references of the `shipments`
        created:
          type: string
          description: The date and time that the `manifest` was created.
          format: date-time
      additionalProperties: false
      description: "The `manifest` object contains details of a collection of `shipments` that were manifested in a single\r\noperation. This can be as a result of manifesting by query, manifesting by an explicit list of `shipment`\r\nreferences, manifesting by `shipment_group`, or by automatic manifest operation."
    Sorted.Shipments.DataContracts.Enums.ShipmentGroupState:
      enum:
        - open
        - locked
        - closed
      type: string
    Sorted.Shipments.DataContracts.ShipmentGroup:
      type: object
      properties:
        reference:
          type: string
          nullable: true
        shipments:
          type: array
          items:
            type: string
          nullable: true
        custom_reference:
          type: string
          nullable: true
        version:
          type: integer
          format: int32
        state:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Enums.ShipmentGroupState'
        created:
          type: string
          format: date-time
        locked:
          type: string
          format: date-time
          nullable: true
        closed:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    Sorted.Shipments.DataContracts.ManifestResult:
      type: object
      properties:
        reference:
          type: string
          nullable: true
        carrier:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.CarrierDetails'
        message:
          type: string
          nullable: true
        state:
          $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Enums.ShipmentState'
        shipment_count:
          type: integer
          format: int32
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.Link'
          nullable: true
      additionalProperties: false
    Sorted.Shipments.DataContracts.ManifestResponse:
      required:
        - manifest_results
      type: object
      properties:
        manifest_results:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Sorted.Shipments.DataContracts.ManifestResult'
          description: Details of the manifest operation for each `shipment` in the request.
      additionalProperties: false
      description: "A `manifest_response` is returned when a request is made to manifest one or more `shipments`. The\r\n`manifest_result` objects within the response will be grouped by carrier or carrier service."
    Sorted.Shipments.DataContracts.ManifestRequest:
      required:
        - shipments
      type: object
      properties:
        shipments:
          type: array
          items:
            type: string
      additionalProperties: false
    Sorted.Shipments.DataContracts.ShipmentStateChangeRequest:
      required:
        - reason
        - reference
      type: object
      properties:
        reference:
          type: string
        state:
          type: string
          nullable: true
        reason:
          maxLength: 100
          minLength: 5
          type: string
      additionalProperties: false
  securitySchemes:
    API Key:
      type: apiKey
      name: x-api-key
      in: header
security:
  - API Key: [ ]